/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cc_omusic_decorder_AudioTools */

#ifndef _Included_cc_omusic_decorder_AudioTools
#define _Included_cc_omusic_decorder_AudioTools
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_omusic_decorder_AudioTools
 * Method:    convertToFloat
 * Signature: (Ljava/nio/ShortBuffer;Ljava/nio/FloatBuffer;I)V
 */
JNIEXPORT void JNICALL Java_cc_omusic_decorder_AudioTools_convertToFloat
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     cc_omusic_decorder_AudioTools
 * Method:    convertToShort
 * Signature: (Ljava/nio/FloatBuffer;Ljava/nio/ShortBuffer;I)V
 */
JNIEXPORT void JNICALL Java_cc_omusic_decorder_AudioTools_convertToShort
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     cc_omusic_decorder_AudioTools
 * Method:    convertToMonoShort
 * Signature: (Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V
 */
JNIEXPORT void JNICALL Java_cc_omusic_decorder_AudioTools_convertToMonoShort
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     cc_omusic_decorder_AudioTools
 * Method:    convertToMonoFloat
 * Signature: (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;I)V
 */
JNIEXPORT void JNICALL Java_cc_omusic_decorder_AudioTools_convertToMonoFloat
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     cc_omusic_decorder_AudioTools
 * Method:    spectralFlux
 * Signature: (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;I)F
 */
JNIEXPORT jfloat JNICALL Java_cc_omusic_decorder_AudioTools_spectralFlux
  (JNIEnv *, jclass, jobject, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
